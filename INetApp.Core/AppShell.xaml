<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:views="clr-namespace:INetApp.Views" 
    xmlns:inetapp="clr-namespace:INetApp" 
    xmlns:resources="clr-namespace:INetApp.Resources"
    x:DataType="inetapp:AppShell"
    x:Class="INetApp.AppShell"
    FlyoutBackgroundColor="{AppThemeBinding Dark={StaticResource DarkForegroundColor}, Light={StaticResource LightForegroundColor}}" 
    >

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackgroundColor}, Light={StaticResource LightBackgroundColor}}" />
                <Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Dark={StaticResource DarkForegroundColor}, Light={StaticResource LightForegroundColor}}" />
                <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Dark={StaticResource DarkForegroundColor}, Light={StaticResource LightForegroundColor}}" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackgroundColor}, Light={StaticResource LightBackgroundColor}}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Dark={StaticResource DarkForegroundColor}, Light={StaticResource LightForegroundColor}}" />
                <Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Dark={StaticResource DarkForegroundColor}, Light={StaticResource LightForegroundColor}}" />
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkForegroundColor}, Light={StaticResource LightForegroundColor}}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource DarkFontColor}, Dark={StaticResource LightFontColor}}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.FontAttributes" Value="Bold"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackgroundColor}, Light={StaticResource LightBackgroundColor}}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="Black" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>            
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="TabBar" />
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="FlyoutItem" />
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="ShellItem" />
        </ResourceDictionary>
    </Shell.Resources>
    <Shell.BackButtonBehavior>
        <BackButtonBehavior TextOverride="" />
    </Shell.BackButtonBehavior>


    <Shell.FlyoutHeader>
        <Grid BackgroundColor="{x:StaticResource app_Color}" >
            <Grid.Margin>
                <OnPlatform x:TypeArguments="Thickness">
                    <On Platform="iOS, Android" Value="0,0,0,0" />
                    <On Platform="UWP, WinRT, WinPhone" Value="0,-40,0,0" />
                </OnPlatform>
            </Grid.Margin>
            <Grid.Padding>
                <MultiBinding Converter="{StaticResource ThicknessConverter}">
                    <Binding Source="{StaticResource menu_header_horizontal_margin}"/>
                    <Binding Source="{StaticResource menu_header_vertical_margin}"/>
                    <Binding Source="{StaticResource menu_header_horizontal_margin}"/>
                    <Binding Source="{StaticResource activity_horizontal_margin}"/>
                </MultiBinding>
            </Grid.Padding>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <BoxView Grid.Row ="0" BackgroundColor="{StaticResource menu_header_avatar}" CornerRadius="50" 
                     WidthRequest="{Binding Source={StaticResource menu_header_avatar_size}, Converter={StaticResource GridLengthConverter}}" 
                     HeightRequest="{Binding Source={StaticResource menu_header_avatar_size}, Converter={StaticResource GridLengthConverter}}" 
                     HorizontalOptions="Start" VerticalOptions="Center"/>
            <Label Grid.Row ="0" 
               x:Name="NameInitial"
               TextColor="{StaticResource white}"
               FontSize="23" 
               Padding="0"
               HorizontalOptions="CenterAndExpand"
               HorizontalTextAlignment="Start"
               VerticalTextAlignment="Center" />
            <Label Grid.Row ="1" 
                   Grid.ColumnSpan="2"
                x:Name="NameUser"
               TextColor="{StaticResource white}"
               FontAttributes="Bold"
               HorizontalTextAlignment="Start"
               VerticalTextAlignment="Center" />
        </Grid>
    </Shell.FlyoutHeader>

    <ShellItem Title="Home">
        <ShellSection>
            <ShellContent 
                Route="MainView"  
                ContentTemplate="{DataTemplate views:MainView}"
                Title="Home" />
        </ShellSection>
    </ShellItem>
    
    <!--<FlyoutItem Route="MainView" FlyoutItemIsVisible="False" StyleClass="FlyoutItemLayoutStyle" 
                FlyoutDisplayOptions="AsMultipleItems" IsTabStop="False">
        <ShellContent Route="MainView"  
                      IsTabStop="False"
                  ContentTemplate="{DataTemplate views:MainView}"
                  Title="Home" />
    </FlyoutItem>-->

    <FlyoutItem Title="{Binding Source={x:Static resources:Literales.action_messages}}" 
            Icon="icon_feed.png" >
        <ShellContent Route="Category" ContentTemplate="{DataTemplate views:CategoryView}" />
    </FlyoutItem>
    <FlyoutItem     Title="{Binding Source={x:Static resources:Literales.action_favorites}}">
        <ShellContent Route="MessageFavorite" ContentTemplate="{DataTemplate views:MessageFavoriteView}" />
    </FlyoutItem>

    <FlyoutItem Title="{Binding Source={x:Static resources:Literales.options}}">
        <ShellContent  Route="Options" ContentTemplate="{DataTemplate views:OptionsView}" />
    </FlyoutItem>
    <FlyoutItem Title="{Binding Source={x:Static resources:Literales.action_parts}}"
                Icon="icon_feed.png">
        <ShellContent Route="WorkParts" ContentTemplate="{DataTemplate views:WorkPartsView}" />
    </FlyoutItem>
    <FlyoutItem Title="{Binding Source={x:Static resources:Literales.action_qr}}"
                Icon="icon_feed.png" >
        <ShellContent Route="LectorQR" ContentTemplate="{DataTemplate views:LectorQRView}" />
    </FlyoutItem>

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>

     <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar Title="{Binding Source={x:Static resources:Literales.action_logout}}">
        <ShellContent Route="Login" ContentTemplate="{DataTemplate views:LoginView}" />
    </TabBar>

    <Shell.FlyoutFooter>
        <Grid BackgroundColor="{x:StaticResource white}" >
            <!--<Grid.Margin>
                <OnPlatform x:TypeArguments="Thickness">
                    <On Platform="iOS, Android" Value="0,0,0,0" />
                    <On Platform="UWP, WinRT, WinPhone" Value="0,-40,0,0" />
                </OnPlatform>
            </Grid.Margin>
            <Grid.Padding>
                <MultiBinding Converter="{StaticResource ThicknessConverter}">
                    <Binding Source="{StaticResource activity_horizontal_margin}"/>
                    <Binding Source="{StaticResource activity_vertical_margin}"/>
                </MultiBinding>
            </Grid.Padding>-->
            <Label Grid.Row ="0" 
               x:Name="VersionApp"
               TextColor="{StaticResource medium_grey}"
               FontSize="12" 
               Padding="0,8,0,0"
               HorizontalOptions="CenterAndExpand"
               HorizontalTextAlignment="Center"
               VerticalTextAlignment="Center" />
        </Grid>
    </Shell.FlyoutFooter>

</Shell>
